<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP//gAH//+AH//////8=
</value>
  </data>
</root>